#General configuration for toop-simulator.
#Read about HOCON

toop-simulator {
  #the simulator mode, one of SOLE DC, DP (default DP)
  mode = "DP"
  mode = ${?SIM_MODE}

  #The simulator will run the connector on this port
  connectorPort = 8081
  connectorPort = ${?CONNECTOR_PORT}

  # the DC endpoint. Override it if you have your own DC endpoint
  dcEndpoint = "http://localhost:"${toop-simulator.connectorPort}"/to-dc"
  dcEndpoint = ${?DC_ENDPOINT}

  # override it if you have your own DP.
  # when DP is simulated, the message is simply
  # transformed back to DC (by being processed by elonia-demo-dp)
  dpEndpoint = "http://localhost:"${toop-simulator.connectorPort}"/to-dp"
  dpEndpoint = ${?DP_ENDPOINT}


  # Enable - disable auto response in DP mode
  dpResponseAuto = true
  dpResponseAuto = ${?DP_RESPONSE_AUTO}


  # This is the id of the side that is being simulated
  # which is DC in DC mode and DP in DP mode
  senderScheme = "iso6523-actorid-upis" #mostly constant
  sender = "9999:freedonia"
  sender = ${?TOOP_SENDER}

  # this is the participant id of the other side
  # which is DP in DC mode and DC in DP mode
  receiverScheme="iso6523-actorid-upis" #mostly constant
  receiver = "9999:elonia"
  receiver = ${?TOOP_RECEIVER}

  MEM {
    # Since V0.10.7
    # should we simulate the gateway connection or not?
    # if true then the gateways are skipped and this simulator instance works as
    # a compound connector of the two member states, otherwise (false) the MEM message
    # is passed to the gateway configured with the key toop.mem.as4.endpoint and all
    # the toop.mem.as4.* configurations (see toop-connector.properties) become significant
    mockGateway = true
    mockGateway = ${?SIM_MEM_MOCK_GATEWAY}

    # Since 2.1.0-SNAPSHOT. Used only when gateway is not mocked
    gatewayEndpoint = "http://gw-freedonia.dev.exchange.toop.eu:9082/holodeckb2b/as4"
    gatewayEndpoint = ${?SIM_MEM_GATEWAY_ENDPOINT}
  }
}
